리눅스는 유닉스의 운영체제와 상당히 유사하지만 공공의 목적을 위한
것이라 생각하면 된다. 기본적인 리눅스 명령어들은 숙지해 놓자.
많이쓰는 명령어
    {
        man : 
        mkdir : 
        ls :
        pwd : 
        cd : 
        echo :
        sudo : 
        cp : 
        mv : 
        clear :
        cat :
        history :
        find : 
        export : 
        cut -f -d:
        redirection(>,>>) :
        pipe (|) :
        ps : 
        curl :
        grep : 
        chmod : 
        nohup :
        scp : 
        df : 
    }


유닉스 파일 시스템은 4개의 주요 블록으로 구성하고 있다.
운영체제를 부팅하기 위해 필요한 부트 블록과 파일 시스템의 크기를
비롯하여 주요 정보를 나타내는 슈퍼블록, 실질적인 파일 정보와 매핑
하는 i-node블록, 마지막으로 실제 데이터를 저장하는 데이터 블록이다.
이외에도 파일 시스템에 따라 통계 정보들을 관리하는 블록이 있다.

# 파일 기술자
리눅스 쉑에 동작하는 프로세스는 개발자 코드가 아닌 프로세스 형성
과정에서 표준 입력과 표준 출력, 표준 에러 파일을 열어주며 이들의
파일 기술자는 0,1,2 번이다. 이는 unistd.h에 매크로 상수로 정의
하고 있는데 이들 상수 이름은 STDIN_FILENO,STDOUT_FILENO,STDERR_FILENO
이다.

# open, close

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
int open(const char *pathname, int flags);
int open(const char *pathname, int flags, mode_t mode);
반환 값:실패 시 -1

#include <unistd.h>
int close(int fd);
반환 값: 실패 시 -1

open 함수의 두번째 인자로 전달하는 flags는 다음을 전달한다.
O_READONLY : 읽기 전용
O_WRONLY : 쓰기 전용
O_RDWR : 읽기/쓰기 혼용
O_APPEND : 이어쓰기모드로 쓰기 작업을 하면 파일의 끝에 쓰기 수행
O_CREAT : 파일이 없을 때 생성 모드, 세번째 인자 요구
    {
        세번째 인자로 생성하는 파일에 접근 권한을 지정할 수 있다.
        만약 지정하지 않는다면 0000(8진수 000)으로 설정.
        첫번째 자리는 파일의 소유자의 읽기/쓰기 권한
        두번째 자리는 소유자 그룹의 읽기/쓰기 권한
        세번째 자리는 Other의 읽기/쓰기 권한을 의미한다.
        ex) 0755를 지정하면(0644 많이사용한다함) 사용자는 읽기/쓰기/실행 권한을 가지고,
        나머지들은 읽기/실행 권한을 가진다. (?? 이해 못함)
    }
O_TRUNC: 기존 파일에 있던 내용을 잘라내어 파일의 크기를 0으로 만듦
O_NONBLOCK : 논 블로킹 모드로 작업
O_SYNC : 쓰기 작업을 요청하면 물리적인 파일에 쓰여짐
O_EXCL : O_CREAT 모드와 함께사용하면 파일이 존재하는지 확인하여
존재 하면 -1 반환



